services:
  delivery-control:
    container_name: delivery-control
    #    image: welissonoliveira/delivery-control:${TAG}
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - "./src/main/resources/logs/files:/app/src/main/resources/logs/files"
    networks:
      - delivery-control-network
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-delivery-control:5432/delivery_control
      SPRING_DATASOURCE_USERNAME: delivery_control
      SPRING_DATASOURCE_PASSWORD: delivery_control
      REDIS_HOST: redis-delivery-control
      REDIS_PORT: 6379
      REDIS_URI: redis-delivery-control:6379
    depends_on:
      - redis
      - postgres
  postgres:
    image: postgres
    container_name: postgres-delivery-control
    ports:
      - "5432:5432"
    networks:
      - delivery-control-network
    environment:
      POSTGRES_USER: delivery_control
      POSTGRES_PASSWORD: delivery_control
      POSTGRES_DB: delivery_control
  postgres-exporter:
    image: quay.io/prometheuscommunity/postgres-exporter
    container_name: postgres-exporter-delivery-control
    ports:
      - "9187:9187"
    environment:
      DATA_SOURCE_NAME: "postgresql://delivery_control:delivery_control@postgres-delivery-control:5432/delivery_control?sslmode=disable"
    networks:
      - delivery-control-network
    depends_on:
      - postgres
  redis:
    image: redis:5.0-rc
    container_name: redis-delivery-control
    ports:
      - "6379:6379"
    networks:
      - delivery-control-network
  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter-delivery-control
    ports:
      - "9100:9100"
    networks:
      - delivery-control-network
  exporter:
    container_name: exporter-delivery-control
    build:
      context: ./k8s/prometheus/exporter-personalizado-go
      dockerfile: Dockerfile
    ports:
      - "7788:7788"
    networks:
      - delivery-control-network
  loki:
    image: grafana/loki:2.0.0
    container_name: loki-delivery-control
    ports:
      - "3100:3100"
    networks:
      - delivery-control-network
    command:
      - -config.file=/etc/loki/local-config.yaml
      - -print-config-stderr=true
  promtail:
    image: grafana/promtail:2.0.0
    container_name: promtail-delivery-control
    ports:
      - "9080:9080"
    command: -config.file=/etc/promtail/config.yml # mapeia o arquivo de configuração do promtail
    volumes:
      - "./src/main/resources/logs/promtail/config.yml:/etc/promtail/config.yml" # faz o bind do arquivo de configuração
      - "./src/main/resources/logs/files:/logs/api" # faz o bind da pasta onde estão os arquivos de log
      - "./tmp:/tmp" # determinado pelo 'positions:' no arquivo de configuração do promtail
    depends_on:
      - delivery-control
    networks:
      - delivery-control-network
  grafana:
    image: grafana/grafana
    container_name: grafana-delivery-control
    ports:
      - "3000:3000"
    networks:
      - delivery-control-network
  prometheus:
    image: prom/prometheus:v2.45.1
    container_name: prometheus-delivery-control
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.rules.yml:/etc/prometheus/alerts.rules
    ports:
      - "9090:9090"
    depends_on:
      - delivery-control
    networks:
      - delivery-control-network
  alert-manager:
    container_name: alert-manager-delivery-control
    image: prom/alertmanager:v0.26.0
    ports:
      - 9093:9093
    networks:
      - delivery-control-network
    volumes:
      - ./alertmanager.yml:/prometheus/alertmanager.yml
    command:
      - '--config.file=/prometheus/alertmanager.yml'

networks:
  delivery-control-network:
    name: delivery-control-network
    driver: bridge